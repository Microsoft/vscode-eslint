{
	"name": "vscode-eslint",
	"displayName": "ESLint",
	"description": "Integrates ESLint JavaScript into VS Code.",
	"version": "1.6.1",
	"author": "Microsoft Corporation",
	"license": "MIT",
	"repository": {
		"type": "git",
		"url": "https://github.com/Microsoft/vscode-eslint.git"
	},
	"bugs": {
		"url": "https://github.com/Microsoft/vscode-eslint/issues"
	},
	"publisher": "dbaeumer",
	"icon": "eslint_icon.png",
	"categories": [
		"Programming Languages",
		"Linters"
	],
	"keywords": [
		"multi-root ready"
	],
	"engines": {
		"vscode": "^1.28.0"
	},
	"activationEvents": [
		"*"
	],
	"main": "./client/out/extension",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "ESLint",
			"properties": {
				"eslint.enable": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Controls whether eslint is enabled for JavaScript files or not."
				},
				"eslint.packageManager": {
					"scope": "resource",
					"type": "string",
					"enum": [
						"npm",
						"yarn"
					],
					"default": "npm",
					"description": "The package manager you use to install node modules."
				},
				"eslint.alwaysShowStatus": {
					"type": "boolean",
					"default": false,
					"description": "Always show the ESlint status bar item.",
					"scope": "window"
				},
				"eslint.nodePath": {
					"scope": "resource",
					"type": [
						"string",
						"null"
					],
					"default": null,
					"description": "A path added to NODE_PATH when resolving the eslint module."
				},
				"eslint._legacyModuleResolve": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "Uses the legacy module resolving."
				},
				"eslint.options": {
					"scope": "resource",
					"type": "object",
					"default": {},
					"description": "The eslint options object to provide args normally passed to eslint when executed from a command line (see http://eslint.org/docs/developer-guide/nodejs-api#cliengine)."
				},
				"eslint.globalSeverity": {
					"examples": [
						null,
						0
					],
					"description": "Force a global rule severity. Overrides all ESLint rules.\n• \"severity\": null = Disable globalSeverity.\nEx.\n\t\"eslint.globalSeverity\": {\n\t\t\"severity\": \"warn\",\n\t\t\"exclude\": [\"no-console\", \"no-debugger\"]\n\t}",
					"markdownDescription": "Force a global rule severity. Overrides all ESLint rules.\n• `\"severity\": null` = Disable globalSeverity.\nEx.`\n\t\"eslint.globalSeverity\": {\n\t\t\"severity\": \"warn\",\n\t\t\"exclude\": [\"no-console\", \"no-debugger\"]\n\t}`",
					"scope": "resource",
					"type": "object",
					"default": {
						"severity": null,
						"exclude": []
					},
					"properties": {
						"severity": {
							"markdownDescription": "Global rule severity.\nSee https://eslint.org/docs/user-guide/getting-started#configuration",
							"type": [
								"null",
								"number",
								"string"
							],
							"enum": [
								null,
								0,
								1,
								2,
								"off",
								"warn",
								"error"
							],
							"enumDescriptions": [
								"Disable globalSeverity",
								"Turn off all ESLint rules",
								"Set all ESLint rules to severity \"warn\"",
								"Set all ESLint rules to severity \"error\"",
								"Turn off all ESLint rules",
								"Set all ESLint rules to severity \"warn\"",
								"Set all ESLint rules to severity \"error\""
							]
						},
						"exclude": {
							"markdownDescription": "A string array of rule ID/names to exclude from this setting. Ex. `[\"no-console\", \"no-debugger\"]`",
							"type": "array"
						}
					}
				},
				"eslint.trace.server": {
					"scope": "window",
					"anyOf": [
						{
							"type": "string",
							"enum": [
								"off",
								"messages",
								"verbose"
							],
							"default": "off"
						},
						{
							"type": "object",
							"properties": {
								"verbosity": {
									"type": "string",
									"enum": [
										"off",
										"messages",
										"verbose"
									],
									"default": "off"
								},
								"format": {
									"type": "string",
									"enum": [
										"text",
										"json"
									],
									"default": "text"
								}
							}
						}
					],
					"default": "off",
					"description": "Traces the communication between VSCode and the eslint linter service."
				},
				"eslint.run": {
					"scope": "resource",
					"type": "string",
					"enum": [
						"onSave",
						"onType"
					],
					"default": "onType",
					"description": "Run the linter on save (onSave) or on type (onType)"
				},
				"eslint.autoFixOnSave": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "Turns auto fix on save on or off."
				},
				"eslint.workingDirectories": {
					"scope": "resource",
					"type": "array",
					"items": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "object",
								"properties": {
									"directory": {
										"type": "string",
										"description": "The working directory to use if a file's path start with this directory."
									},
									"changeProcessCWD": {
										"type": "boolean",
										"description": "Whether the process's cwd should be changed as well."
									}
								}
							}
						]
					}
				},
				"eslint.validate": {
					"scope": "resource",
					"type": "array",
					"items": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "object",
								"properties": {
									"language": {
										"type": "string",
										"description": "The language id to be validated by ESLint"
									},
									"autoFix": {
										"type": "boolean",
										"description": "Whether auto fixes are provided for the language"
									}
								}
							}
						]
					},
					"default": [
						"javascript",
						"javascriptreact"
					],
					"description": "An array of language ids which should be validated by ESLint"
				},
				"eslint.provideLintTask": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "Controls whether a task for linting the whole workspace will be available."
				},
				"eslint.runtime": {
					"scope": "window",
					"type": [
						"string",
						"null"
					],
					"default": null,
					"description": "The location of the node binary to run ESLint under."
				}
			}
		},
		"commands": [
			{
				"title": "Fix all auto-fixable Problems",
				"category": "ESLint",
				"command": "eslint.executeAutofix"
			},
			{
				"title": "Create ESLint configuration",
				"category": "ESLint",
				"command": "eslint.createConfig"
			},
			{
				"title": "Enable ESLint",
				"category": "ESLint",
				"command": "eslint.enable"
			},
			{
				"title": "Disable ESLint",
				"category": "ESLint",
				"command": "eslint.disable"
			},
			{
				"title": "Show Output Channel",
				"category": "ESLint",
				"command": "eslint.showOutputChannel"
			}
		],
		"jsonValidation": [
			{
				"fileMatch": ".eslintrc",
				"url": "http://json.schemastore.org/eslintrc"
			},
			{
				"fileMatch": ".eslintrc.json",
				"url": "http://json.schemastore.org/eslintrc"
			}
		],
		"languages": [
			{
				"id": "ignore",
				"filenames": [
					".eslintignore"
				]
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "cd client && npm run update-vscode && cd .. && npm run compile",
		"compile:client": "tsc -p ./client/tsconfig.json",
		"compile:server": "tsc -p ./server/tsconfig.json",
		"watch:client": "tsc -w -p ./client/tsconfig.json",
		"watch:server": "tsc -w -p ./server/tsconfig.json",
		"compile": "npm run compile:client && npm run compile:server",
		"postinstall": "cd client && npm install && cd ../server && npm install && cd .."
	},
	"devDependencies": {
		"typescript": "^2.9.1",
		"@types/node": "^8.0.0"
	}
}
